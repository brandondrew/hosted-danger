jobs:

  pr:
    image: cd.docker-registry.corp.yahoo.co.jp:4443/approduce/hosted-danger-sd-image:latest
    requires: [~pr]
    steps:
      - format: |
          crystal tool format --check &> /dev/null
          ret_code=$?

          if [ 0 -ne $ret_code ]; then
              echo 'Please formatting the codes. ('$ret_code')'
              exit $ret_code
          else
              echo 'Success!'
          fi
      - build: |
          shards build
      - test: |
          crystal spec

  commit:
    image: cd.docker-registry.corp.yahoo.co.jp:4443/approduce/hosted-danger-sd-image:latest
    requires: [~commit]
    steps:
      - build: |
          shards build
      - test: |
          crystal spec

  publish-image:
    template: docker/publish@stable
    environment:
      REPO_NAME: approduce
      IMAGE_NAME: hosted-danger-image
    requires: [commit]
    steps:
      - prebuild_image: tools/setenv
    secrets:
      - ACCESS_TOKEN_GHE
      - ACCESS_TOKEN_PARTNER
      - DRAGON_ACCESS_KEY
      - DRAGON_SECRET_ACCESS_KEY

  deployment:
    image: cd.docker-registry.corp.yahoo.co.jp:4443/approduce/hosted-danger-sd-image:latest
    requires: [publish-image]
    steps:
      - confirmation: |
          echo "Deploying image: "
          echo `meta get fixed_docker_image`
      - deployment: |
          echo $KUBE_CONFIG > kube.conf
          echo "-- 0 --"
          kubectl get pods --kubeconfig kube.conf
          echo "-- 1 --"
          sed -e "s/IMAGE/"`meta get fixed_docker_image`"/g" ops/kube/deployment.yaml.tmpl > deployment.yaml
          echo "-- 2 --"
          cat deployment.yaml
          echo "-- 3 --"
          kubectl apply -f ops/kube/deployment.yaml --kubeconfig kube.conf
          echo "-- 4 --"
